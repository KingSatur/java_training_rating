plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.decamp-learning'
version = '1.0'
sourceCompatibility = '11'
description = 'This handle all the operations concerned with rating books'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.4")
}

def getCommitInfo = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'rev-parse', '--short', 'HEAD'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

ext.commitInfo = property('commitArgument')
//ext.commitInfo = getCommitInfo()


processResources{
	filesMatching('bootstrap.yml') {
		expand(project.properties)
	}
}

compileJava.dependsOn(processResources)

jar {
	enabled = false
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'javax.validation:validation-api'
	implementation 'org.hibernate.validator:hibernate-validator'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.micrometer:micrometer-core'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
tasks.withType(JavaCompile)

tasks.named('test') {
	useJUnitPlatform()
}
